# yamllint disable-file
# yaml-language-server: $schema=https://raw.githubusercontent.com/awslabs/goformation/master/schema/cloudformation.schema.json

AWSTemplateFormatVersion: '2010-09-09'
Description: 'UpNest DynamoDB Tables - Complete Baby Tracking Database Schema'

# =============================================================================
# NOTE: YAML Linting Errors Are Expected
# The !Ref, !Sub, !GetAtt functions are CloudFormation intrinsic functions
# VS Code YAML linter doesn't recognize them, but they are valid AWS syntax
# =============================================================================

# =============================================================================
# TEMPLATE PARAMETERS
# These allow customization when deploying the stack
# =============================================================================
Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, staging, prod]
    Description: Environment name for resource naming (dev/staging/prod)
  
  BillingMode:
    Type: String
    Default: PAY_PER_REQUEST
    AllowedValues: [PAY_PER_REQUEST, PROVISIONED]
    Description: DynamoDB billing mode - PAY_PER_REQUEST scales automatically

# =============================================================================
# DYNAMODB TABLES
# Five tables for complete baby tracking functionality
# =============================================================================
Resources:
  # =============================================================================
  # USERS TABLE
  # Stores user profiles, preferences, and subscription information
  # Primary Key: userId (Cognito Sub ID)
  # =============================================================================
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      # !Sub replaces ${Environment} with the parameter value (dev/staging/prod)
      TableName: !Sub 'UpNest-Users-${Environment}'
      # !Ref gets the value of the BillingMode parameter
      BillingMode: !Ref BillingMode
      
      # Define the attributes that will be used as keys
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S  # String type
        - AttributeName: email
          AttributeType: S  # String type for email lookup
      
      # Primary key configuration
      KeySchema:
        - AttributeName: userId
          KeyType: HASH  # Partition key
      
      # Global Secondary Index for email lookups
      GlobalSecondaryIndexes:
        - IndexName: EmailIndex
          KeySchema:
            - AttributeName: email
              KeyType: HASH  # Partition key for this index
          Projection:
            ProjectionType: ALL  # Include all attributes
      
      # Enable backup and recovery features
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      
      # Enable encryption at rest
      SSESpecification:
        SSEEnabled: true
      
      # Enable DynamoDB Streams for real-time data changes
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      
      # Tags for resource management and billing
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: UpNest
        - Key: TableType
          Value: Users

  # =============================================================================
  # BABIES TABLE
  # Stores individual baby profiles linked to parent users
  # Primary Key: babyId (UUID)
  # =============================================================================
  BabiesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'UpNest-Babies-${Environment}'
      BillingMode: !Ref BillingMode
      
      # Define attributes used in keys and indexes
      AttributeDefinitions:
        - AttributeName: babyId
          AttributeType: S  # String UUID for unique baby identification
        - AttributeName: userId
          AttributeType: S  # Parent user ID (foreign key to Users table)
        - AttributeName: dateOfBirth
          AttributeType: S  # ISO date string for birth date
      
      # Primary key configuration
      KeySchema:
        - AttributeName: babyId
          KeyType: HASH  # Partition key for direct baby lookups
      
      # Global Secondary Indexes for efficient querying
      GlobalSecondaryIndexes:
        # Index to find all babies belonging to a specific user
        - IndexName: UserBabiesIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH    # Partition by user
            - AttributeName: dateOfBirth
              KeyType: RANGE   # Sort by birth date (oldest to newest)
          Projection:
            ProjectionType: ALL  # Include all baby attributes in index
        
        # Index for active/inactive baby status queries
        - IndexName: ActiveBabiesIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH    # Query by user for active babies
          Projection:
            ProjectionType: ALL  # Include all attributes for complete baby data
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: UpNest
        - Key: TableType
          Value: Babies

  # =============================================================================
  # GROWTH DATA TABLE
  # Stores weight, height, and head circumference measurements with percentiles
  # Primary Key: dataId (UUID)
  # =============================================================================
  GrowthDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'UpNest-GrowthData-${Environment}'
      BillingMode: !Ref BillingMode
      
      # Define attributes for keys and indexes
      AttributeDefinitions:
        - AttributeName: dataId
          AttributeType: S  # UUID for unique measurement identification
        - AttributeName: babyId
          AttributeType: S  # Links to baby record
        - AttributeName: userId
          AttributeType: S  # User ID for data isolation and security
        - AttributeName: measurementDate
          AttributeType: S  # ISO date string for chronological sorting
        - AttributeName: measurementType
          AttributeType: S  # Type: weight, height, head_circumference
      
      # Primary key configuration
      KeySchema:
        - AttributeName: dataId
          KeyType: HASH  # Partition key for direct measurement lookups
      
      # Global Secondary Indexes for efficient querying patterns
      GlobalSecondaryIndexes:
        # Index to get all measurements for a specific baby chronologically
        - IndexName: BabyGrowthIndex
          KeySchema:
            - AttributeName: babyId
              KeyType: HASH    # Partition by baby
            - AttributeName: measurementDate
              KeyType: RANGE   # Sort by date (oldest to newest)
          Projection:
            ProjectionType: ALL  # Include all measurement data and percentiles
        
        # Index to get all measurements for a user across all babies
        - IndexName: UserGrowthDataIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH    # Partition by user for data isolation
            - AttributeName: measurementDate
              KeyType: RANGE   # Sort by date for timeline views
          Projection:
            ProjectionType: ALL  # Include all attributes for analysis
        
        # Index to filter by measurement type (weight only, height only, etc.)
        - IndexName: BabyMeasurementTypeIndex
          KeySchema:
            - AttributeName: babyId
              KeyType: HASH    # Partition by baby
            - AttributeName: measurementType
              KeyType: RANGE   # Sort by measurement type
          Projection:
            ProjectionType: ALL  # Include all data for type-specific charts
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: UpNest
        - Key: TableType
          Value: GrowthData

  # =============================================================================
  # VACCINATIONS TABLE
  # Tracks immunization records and vaccination schedules
  # Primary Key: vaccinationId (UUID)
  # =============================================================================
  VaccinationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'UpNest-Vaccinations-${Environment}'
      BillingMode: !Ref BillingMode
      
      # Define attributes for vaccination tracking
      AttributeDefinitions:
        - AttributeName: vaccinationId
          AttributeType: S  # UUID for unique vaccination record
        - AttributeName: babyId
          AttributeType: S  # Links to baby record
        - AttributeName: userId
          AttributeType: S  # User ID for data isolation
        - AttributeName: dateAdministered
          AttributeType: S  # ISO date when vaccine was given
        - AttributeName: nextDueDate
          AttributeType: S  # ISO date for next dose or follow-up
      
      # Primary key configuration
      KeySchema:
        - AttributeName: vaccinationId
          KeyType: HASH  # Partition key for direct vaccination lookups
      
      # Global Secondary Indexes for vaccination management
      GlobalSecondaryIndexes:
        # Index to get all vaccinations for a specific baby chronologically
        - IndexName: BabyVaccinationsIndex
          KeySchema:
            - AttributeName: babyId
              KeyType: HASH    # Partition by baby
            - AttributeName: dateAdministered
              KeyType: RANGE   # Sort by administration date
          Projection:
            ProjectionType: ALL  # Include all vaccination details
        
        # Index for user-level vaccination tracking across all babies
        - IndexName: UserVaccinationsIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH    # Partition by user for privacy
            - AttributeName: dateAdministered
              KeyType: RANGE   # Sort by date for timeline views
          Projection:
            ProjectionType: ALL  # Include all vaccination data
        
        # Index for upcoming vaccination reminders and scheduling
        - IndexName: UpcomingVaccinationsIndex
          KeySchema:
            - AttributeName: babyId
              KeyType: HASH    # Partition by baby
            - AttributeName: nextDueDate
              KeyType: RANGE   # Sort by due date for reminders
          Projection:
            ProjectionType: ALL  # Include all data for reminder notifications
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: UpNest
        - Key: TableType
          Value: Vaccinations

  # =============================================================================
  # MILESTONES TABLE
  # Tracks developmental milestones and achievements
  # Primary Key: milestoneId (UUID)
  # =============================================================================
  MilestonesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'UpNest-Milestones-${Environment}'
      BillingMode: !Ref BillingMode
      
      # Define attributes for milestone tracking
      AttributeDefinitions:
        - AttributeName: milestoneId
          AttributeType: S  # UUID for unique milestone record
        - AttributeName: babyId
          AttributeType: S  # Links to baby record
        - AttributeName: userId
          AttributeType: S  # User ID for data isolation
        - AttributeName: achievedDate
          AttributeType: S  # ISO date when milestone was achieved
        - AttributeName: milestoneType
          AttributeType: S  # Type: motor, cognitive, social, language
      
      # Primary key configuration
      KeySchema:
        - AttributeName: milestoneId
          KeyType: HASH  # Partition key for direct milestone lookups
      
      # Global Secondary Indexes for milestone analysis
      GlobalSecondaryIndexes:
        # Index to get all milestones for a specific baby chronologically
        - IndexName: BabyMilestonesIndex
          KeySchema:
            - AttributeName: babyId
              KeyType: HASH    # Partition by baby
            - AttributeName: achievedDate
              KeyType: RANGE   # Sort by achievement date
          Projection:
            ProjectionType: ALL  # Include all milestone details
        
        # Index for user-level milestone tracking across all babies
        - IndexName: UserMilestonesIndex
          KeySchema:
            - AttributeName: userId
              KeyType: HASH    # Partition by user for privacy
            - AttributeName: achievedDate
              KeyType: RANGE   # Sort by date for progress tracking
          Projection:
            ProjectionType: ALL  # Include all milestone data
        
        # Index to filter milestones by developmental category
        - IndexName: MilestoneTypeIndex
          KeySchema:
            - AttributeName: babyId
              KeyType: HASH    # Partition by baby
            - AttributeName: milestoneType
              KeyType: RANGE   # Sort by milestone category
          Projection:
            ProjectionType: ALL  # Include all data for category analysis
      
      # Enable backup and recovery features
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      
      # Enable encryption at rest
      SSESpecification:
        SSEEnabled: true
      
      # Resource tags for management and billing
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: UpNest
        - Key: TableType
          Value: Milestones

# =============================================================================
# OUTPUTS SECTION
# Export table names and ARNs for use in other CloudFormation stacks
# These outputs can be imported by Lambda functions and other AWS services
# =============================================================================
Outputs:
  # =============================================================================
  # TABLE NAMES - For Lambda Environment Variables
  # These are used by Lambda functions to connect to the correct tables
  # =============================================================================
  UsersTableName:
    Description: 'Users DynamoDB Table Name - Used for user profile management'
    Value: !Ref UsersTable
    Export:
      Name: !Sub '${AWS::StackName}-UsersTable'

  BabiesTableName:
    Description: 'Babies DynamoDB Table Name - Used for baby profile management'
    Value: !Ref BabiesTable
    Export:
      Name: !Sub '${AWS::StackName}-BabiesTable'

  GrowthDataTableName:
    Description: 'Growth Data DynamoDB Table Name - Used for measurements and percentiles'
    Value: !Ref GrowthDataTable
    Export:
      Name: !Sub '${AWS::StackName}-GrowthDataTable'

  VaccinationsTableName:
    Description: 'Vaccinations DynamoDB Table Name - Used for immunization tracking'
    Value: !Ref VaccinationsTable
    Export:
      Name: !Sub '${AWS::StackName}-VaccinationsTable'

  MilestonesTableName:
    Description: 'Milestones DynamoDB Table Name - Used for developmental tracking'
    Value: !Ref MilestonesTable
    Export:
      Name: !Sub '${AWS::StackName}-MilestonesTable'

  # =============================================================================
  # TABLE ARNs - For IAM Policies and Resource Access
  # These are used in IAM policies to grant specific permissions to Lambda functions
  # =============================================================================
  UsersTableArn:
    Description: 'Users Table ARN - For Lambda IAM policy resource permissions'
    Value: !GetAtt UsersTable.Arn
    Export:
      Name: !Sub '${AWS::StackName}-UsersTableArn'

  BabiesTableArn:
    Description: 'Babies Table ARN - For Lambda IAM policy resource permissions'
    Value: !GetAtt BabiesTable.Arn
    Export:
      Name: !Sub '${AWS::StackName}-BabiesTableArn'

  GrowthDataTableArn:
    Description: 'Growth Data Table ARN - For Lambda IAM policy resource permissions'
    Value: !GetAtt GrowthDataTable.Arn
    Export:
      Name: !Sub '${AWS::StackName}-GrowthDataTableArn'

  VaccinationsTableArn:
    Description: 'Vaccinations Table ARN - For Lambda IAM policy resource permissions'
    Value: !GetAtt VaccinationsTable.Arn
    Export:
      Name: !Sub '${AWS::StackName}-VaccinationsTableArn'

  MilestonesTableArn:
    Description: 'Milestones Table ARN - For Lambda IAM policy resource permissions'
    Value: !GetAtt MilestonesTable.Arn
    Export:
      Name: !Sub '${AWS::StackName}-MilestonesTableArn'

  # =============================================================================
  # ENVIRONMENT INFORMATION - For Stack Management
  # Used to identify which environment (dev/staging/prod) this stack belongs to
  # =============================================================================
  Environment:
    Description: 'Environment name - Used for resource identification and management'
    Value: !Ref Environment
    Export:
      Name: !Sub '${AWS::StackName}-Environment'

  StackName:
    Description: 'CloudFormation Stack Name'
    Value: !Ref 'AWS::StackName'
    Export:
      Name: !Sub '${AWS::StackName}-StackName'
